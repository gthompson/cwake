: # use perl                                                                                                                                                            
eval 'exec $ANTELOPE/bin/perl -S $0 "$@"'                                                                                                                               
if 0;                                                                                                                                                                   
use lib "$ENV{ANTELOPE}/data/perl" ;
##############################################################################
# Author: Glenn Thompson (GT) 2010
#         ALASKA VOLCANO OBSERVATORY
#
# Modifications:
#
# Purpose:
#
# To do:
##############################################################################

use Datascope;
use Getopt::Std;
use strict;
use warnings;

# Get the program name
our $PROG_NAME;
($PROG_NAME = $0) =~ s(.*/)();  # PROG_NAME becomes $0 minus any path

# Usage - command line options and arguments
if ( $#ARGV != 1) {
    print STDERR <<"EOU" ;

    Usage: $PROG_NAME cyldlyfile vmodeldb 

EOU
    exit 1 ;
}

# End of  GT Antelope Perl header

my $NVERTICES = 8;
our %regname;
open(FIN,$ARGV[0]);
my $table = $ARGV[1].".regions";
my @db = dbopen_table($table, "r+");
my $table2 = $ARGV[1].".regmodel";
my @db2 = dbopen_table($table2, "r+");
while (my $line = <FIN>) {
	#print $line;
	if ($line=~/^c\*/) {
		#print "- a comment\n";
		my $comment = $line;
	} else {
		#print "- a cylinder\n";
		my @fields = split(/\s+/,$line);
		my ($dump, $delaymodel, $velocitymodel, $olat, $olon, $inner_radius, $outer_radius, $inner_top, $outer_top, $inner_bottom, $outer_bottom, $modname) = @fields;
		print "dm=$delaymodel, vm=$velocitymodel, olat=$olat, olon=$olon, ir=$inner_radius, or=$outer_radius, it=$inner_top, ot=$outer_top, ib=$inner_bottom, ob=$outer_bottom\n";
		my $delvel = $delaymodel."_".$velocitymodel;
		$regname{$delvel}++;
		my $regname0 = $delvel."_".$regname{$delvel};
		dbaddv(@db2, "modelset", "avo", "regname", $regname0, "level", 2, "algorithm", "tt1dvcl", "modname", $modname);
		for (my $vertex=0; $vertex<$NVERTICES; $vertex++) {
			my $angle = 360 / $NVERTICES * $vertex;
		        my $newlon = `dbcalc -c "longitude($olat, $olon, km2deg($inner_radius), -$angle)"`; chomp($newlon);
 		       	my $newlat = `dbcalc -c "latitude($olat, $olon, km2deg($inner_radius), -$angle)"`; chomp($newlat);
 		       	$newlon = sprintf("%.3f", $newlon);
 		       	$newlat = sprintf("%.3f", $newlat);
			print "       regname = $regname0, vertex=$vertex, lat=$newlat, lon=$newlon\n";
			dbaddv(@db, "regname", $regname0, "vertex", $vertex+1, "lat", $newlat, "lon", -$newlon);
		}
	}
}
close(FIN);

# Need to add regions and regmodel for gulf_ak, south62.5 and north62.5
dbaddv(@db, "regname", "avo_default", "vertex", 1, "lat", 50.0, "lon", -130.0);
dbaddv(@db, "regname", "avo_default", "vertex", 2, "lat", 70.0, "lon", -130.0);
dbaddv(@db, "regname", "avo_default", "vertex", 3, "lat", 70.0, "lon", -179.9);
dbaddv(@db2, "modelset", "avo", "regname", "avo_default", "level", 1, "algorithm", "tt1dvcl", "modname", "south62.5");

dbclose(@db);
#dbclose(@db2);





